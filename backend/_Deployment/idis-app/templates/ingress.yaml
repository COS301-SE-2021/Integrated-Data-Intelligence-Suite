#apiVersion: v1
#kind: Secret
#metadata:
# name: app-secret-tls
#  namespace: default
#type: kubernetes.io.tls
#data:
#  tls.crt: base64 encoded cert
#  tls.key: base64 encoded key


#---
#apiVersion: secrets-store.csi.x-k8s.io/v1alpha1
#kind: SecretProviderClass
#metadata:
#  name: emerge-keyvault
#  namespace: default
#spec:
#  provider: azure
#  secretObjects:
#  - secretName: app-secret-tls
#    type: kubernetes.io.tls
#    data:
#    - objectName: idis
#      key: tls.key
#    - objectName: idis
#      key: tls.crt
#  parameters:
#    usePodIdentity: "false"
#    useVMManagedIdentity: "false"
#    userAssignedIdentityID: ""
#    keyvaultName: "emerge-keyvault"
#    objects: |
#      array:
#        - |
#          objectName: idis
#          objectType: secret
#    tenantID: ""



---
#requires ingress controller : minikube addons enable ingress
#apiVersion: extensions/v1beta1
#apiVersion: networking.k8s.io/v1beta1
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: idis-ingress
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
    #kubernetes.io/ingress.class: azure/application-gateway
    #appgw.ingress.kubernetes.io/ssl-redirect: "true"
    #kubernetes.io/ingress.class: "nginx"
    #nginx.ingress.kubernetes.io/rewrite-target: /
spec:
#  tls:
  #    - secretname: app-secret-tls
  #      hosts:
  #     - idis.com
  rules:
    - host: ce9e0b448dbe401a9a40.uksouth.aksapp.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gateway-service-svc
                port:
                  number: 80
    - host: ce9e0b448dbe401a9a40.uksouth.aksapp.io
      http:
        paths:
          - path: /spark
            pathType: Prefix
            backend:
              service:
                name: spark-master
                port:
                  number: 8080